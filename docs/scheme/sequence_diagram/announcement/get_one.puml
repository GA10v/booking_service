@startuml layers
' !theme materia
autonumber
skinparam sequence {
    ParticipantPadding 20
    MessageAlign center
}

title GET '/announcement/{announcement_id}'

participant Client as Client
participant "Booking API" as API
participant "AnnouncementService" as Service
participant "AnnounceRepository" as AnnounceRepo
participant "BookingRepository" as BookingRepo
participant "UserRepository" as UserRepo
participant "MovieRepository" as MovieRepo
participant "RatingRepository" as RatingRepo
database "Cache" as Cache_Service
database "Booking DB" as DB_Booking
participant DB_Booking
participant Auth
participant Notification
participant Movie_API
participant Rating
participant Url_shortner
participant UGC

Client -> API: - Announcement_id
API -> API:
note right
    - проверка access_headers
end note
API -> Service: - Announcement_id

group Announcement Service

    group #B2C7E8 layer_service
        Service -> Service
        note right
            - self.repo.get_bi_id()
        end note
        end group

        Service --> AnnounceRepo: - Announcement_id

        group #B1C7E8 layer_repo
            AnnounceRepo -> AnnounceRepo
            note right
                - create query
            end note

            AnnounceRepo -> AnnounceRepo
            note right
                - self.db.execute()
            end note

            AnnounceRepo -> DB_Booking: Select Announcement(id)
            DB_Booking -> AnnounceRepo: - layer_models.PGAnnouncement

            AnnounceRepo -> AnnounceRepo
            note right
                - self.user_repo.get_by_id()
            end note
            AnnounceRepo --> UserRepo: - author_id
            UserRepo -> Auth: - author_id
            Auth -> UserRepo: - layer_models.UserToResponse
            UserRepo -> AnnounceRepo: - layer_models.UserToResponse

            AnnounceRepo -> AnnounceRepo
            note right
                - self.movie_repo.get_by_id()
            end note
            AnnounceRepo --> MovieRepo: - movie_id
            MovieRepo -> Movie_API: - movie_id
            Movie_API -> MovieRepo: - layer_models.MovieToResponse
            MovieRepo -> AnnounceRepo: - layer_models.MovieToResponse

            AnnounceRepo -> AnnounceRepo
            note right
                - self.rating_repo.get_by_id()
            end note
            AnnounceRepo --> RatingRepo: - author_id
            RatingRepo -> Rating: - author_id
            Rating -> RatingRepo: - layer_models.RatingToResponse
            RatingRepo -> AnnounceRepo: - layer_models.RatingToResponse

            AnnounceRepo -> AnnounceRepo
            note right
                - self.booking_repo.get_by_id()
            end note
            AnnounceRepo -> BookingRepo: - Announcement_id

            BookingRepo -> BookingRepo
            note right
                - create query
            end note

            BookingRepo -> BookingRepo
            note right
                - self.db.execute()
            end note

            BookingRepo -> DB_Booking: Select Booking(id)
            DB_Booking -> BookingRepo: - layer_models.PGBooking

            BookingRepo -> BookingRepo
            note right
                - self._get_booking_resp()
            end note

            group loop for guests
                BookingRepo -> UserRepo: - user_id
                UserRepo -> Auth: - author_id
                Auth -> UserRepo: - layer_models.UserToResponse
                UserRepo -> BookingRepo: - layer_models.UserToResponse

                BookingRepo -> RatingRepo: - user_id
                RatingRepo -> Rating: - author_id
                Rating -> RatingRepo: - layer_models.RatingToResponse
                RatingRepo -> BookingRepo: - layer_models.RatingToResponse
                end group

                BookingRepo -> AnnounceRepo: list[layer_models.BookingToDetailResponse]
                AnnounceRepo -> AnnounceRepo
                note right
                    - create Response
                end note

                end group

                AnnounceRepo --> Service: - layer_models.DetailAnnouncementResponse
                end group

                Service -> API: - layer_models.DetailAnnouncementResponse

                API -> Client: - layer_models.DetailAnnouncementResponse
                @enduml